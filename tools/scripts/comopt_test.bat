@echo off

:: Run COMOPT test and check results

setlocal EnableDelayedExpansion
set CMDLINE=%*
:: Default values
set COMOPT_EXECUTABLE=
set COMOPT_COMPARISON_EXECUTABLE=
set COMOPT_INPUT_DIRECTORY=./
set COMOPT_RESULTS_FILES=
set TOLERANCE=0.001

GOTO main
 
:SplitArgs
  REM recursive procedure to split off the first two tokens from the input
  if "%*" NEQ "" (
    REM %%i = KEY, %%j = VALUE, %%k = remainder of input
    REM delimiters are space character and equals character
    for /F "tokens=1,2,* delims== " %%i in ("%*") do call :AssignKeyValue %%i %%j & call :SplitArgs %%k
  )
  goto :eof

:AssignKeyValue
  REM KEY %1, VALUE %2
  if /i %1 EQU -e (
      SET COMOPT_EXECUTABLE=%2
  ) else if /i %1 EQU -c (
      SET COMOPT_COMPARISON_EXECUTABLE=%2
  ) else if /i %1 EQU -r (
      SET COMOPT_RESULTS_FILES=%2
  ) else if /i %1 EQU -i (
      SET COMOPT_INPUT_DIRECTORY=%2
  ) else if /i %1 EQU -t (
      SET TOLERANCE=%2
  ) else (
    REM Append unrecognised [key,value] to BADARGS
    REM echo Unknown KEY %1
    REM call :usage
    REM exit /b 1
  )
  goto :eof

:FileNameAttributes
  set "path=%~1"
  set "file=%~1"
:loop
   if defined file (
      for /f "delims=/ tokens=1*" %%x in ("%file%") do (
          set "filename=%%x"
          set "file=%%y"
      )
      goto loop
  )

  call set filepath=%%path:!filename!=%%
  goto :eof

:: How to use this batch
:usage
  echo "Run test and check results"
  echo ""
  echo "./comopt_test.bat"
  echo "-h             -- display this help"
  echo "-e             -- test executable full path"
  echo "-c             -- comparison tool executable full path"
  echo "-r             -- results filenames list (optional)"
  echo "-i             -- input directory containing reference results files (optional)"
  echo "-t             -- tolerance to compare values of results and reference files (optional)"
exit /b 1

:main
call :SplitArgs %CMDLINE%

:: Check if comopt test executable exists
if "%COMOPT_EXECUTABLE%" == "" (
    call :usage
    exit /b 1
)

:: Output files generated by this script
set log_file=test.log
set error_file=test.err
set diffnum_error_file=diffnum.err

:: Clean output directory
del /q /f %log_file% %error_file% %diffnum_error_file% > nul 2> nul

:: Command
echo "Launch test : %COMOPT_EXECUTABLE%"
"%COMOPT_EXECUTABLE%" > %log_file% 2> %error_file%

:: Check if test executable failed
if %ERRORLEVEL% neq 0 ( 
    :: test failed
    echo "Error during execution. Read %log_file% or %error_file%"
    exit /b 1
)

:: Comparison of results
set test=0

set COMPARISON_EXECUTABLE="%COMOPT_COMPARISON_EXECUTABLE%"

if not "!COMPARISON_EXECUTABLE!" == "" (
    if not "%COMOPT_RESULTS_FILES%" == """" (
        for %%R in (%COMOPT_RESULTS_FILES%) do (
            set RESULT_FILE=%%R
            if exist "!RESULT_FILE!" (
                set RESULT=!RESULT_FILE:"=!
                call :FileNameAttributes !RESULT!
                set RESULT_PATH=!filepath!
                set RESULT_FILE=!filename!
                set RESULT="!RESULT_PATH!!RESULT_FILE!"
                set REFERENCE_FILE=!RESULT_PATH!Ref_!RESULT_FILE!
                set REFERENCE="%COMOPT_INPUT_DIRECTORY%/!REFERENCE_FILE!"
                set DIFFERENCE=

                call :FileNameAttributes !COMPARISON_EXECUTABLE!
                set EXECUTABLE_FILE=!filename!
                if "!EXECUTABLE_FILE!" == "fc.exe" (
                    set COMMAND="!COMPARISON_EXECUTABLE:/=\! !RESULT:/=\! !REFERENCE:/=\! > NUL || echo 'Binary files are not exactly the same'"
                ) else (
                    set COMMAND="!COMPARISON_EXECUTABLE! !RESULT! !REFERENCE! !TOLERANCE!"
                )

                echo "Comparison launched : !COMMAND!"

                for /f "tokens=*" %%s in ('!COMMAND!') do (
                    set DIFFERENCE=%%s
                )

                if not "!DIFFERENCE!" == "" (
                    set test=1
                    echo "Difference between !RESULT_PATH!!RESULT_FILE! and !REFERENCE_FILE! : !DIFFERENCE!" > %diffnum_error_file%
                    goto :break
                ) else (
                    echo "Comparison between !RESULT_PATH!!RESULT_FILE! and !REFERENCE_FILE! => Success"
                )
            ) else (
                set test=1
                echo "Error during execution (output file !RESULT_PATH!!RESULT_FILE! not created). Read %log_file% or %error_file%"
               goto :break
            )
        )
    )
)

:break

:: 0 succeed, 1 failed
exit /b %test%
